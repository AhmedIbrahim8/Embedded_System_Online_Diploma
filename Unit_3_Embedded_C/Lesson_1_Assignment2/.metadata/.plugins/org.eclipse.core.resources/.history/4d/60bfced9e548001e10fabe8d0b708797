/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif


#include "Std_Types.h"
#include "common_macros.h"

#define  RCC_BASE_ADDRESS              0x40021000
#define  PORTA_BASE_ADDRESS            0x40010800

#define  RCC_APB2ENR_OFFSET_ADDRESS    0x18
#define  PORTA_CRH_OFFSET_ADDRESS      0x04
#define  PORTA_ODR_OFFSET_ADDRESS      0x0C


#define  RCC_APB2ENR  *((volatile uint32 *)(RCC_BASE_ADDRESS+RCC_APB2ENR_OFFSET_ADDRESS))

#define  PORTA_CRH    *((volatile uint32 *)(PORTA_BASE_ADDRESS+PORTA_CRH_OFFSET_ADDRESS))

#define  PORTA_ODR    *((volatile uint32 *)(PORTA_BASE_ADDRESS+PORTA_ODR_OFFSET_ADDRESS))

int main(void)
{
	SET_BIT(RCC_APB2ENR,2);

	PORTA_CRH = (PORTA_CRH & 0xFF0FFFF) | (0x00200000);
    /* Loop forever */
	while(1){
		TOGGLE_BIT( PORTA_ODR,13);
		for(uint32 x=0;x<50000;x++);
	}

	return 0;
}
